!function(n){function e(e){for(var o,c,i=e[0],u=e[1],l=e[2],p=0,f=[];p<i.length;p++)c=i[p],r[c]&&f.push(r[c][0]),r[c]=0;for(o in u)Object.prototype.hasOwnProperty.call(u,o)&&(n[o]=u[o]);for(s&&s(e);f.length;)f.shift()();return a.push.apply(a,l||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],o=!0,i=1;i<t.length;i++){var u=t[i];0!==r[u]&&(o=!1)}o&&(a.splice(e--,1),n=c(c.s=t[0]))}return n}var o={},r={7:0,5:0,6:0},a=[];function c(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=n,c.c=o,c.d=function(n,e,t){c.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,e){if(1&e&&(n=c(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)c.d(t,o,function(e){return n[e]}.bind(null,o));return t},c.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(e,"a",e),e},c.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},c.p="";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=e,i=i.slice();for(var l=0;l<i.length;l++)e(i[l]);var s=u;a.push([43,0]),t()}([,function(n,e,t){var o=t(9);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},,,function(n,e,t){var o=t(11);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},function(n,e,t){"use strict";t.d(e,"a",function(){return f});var o=t(0),r=t.n(o),a=t(1),c=t.n(a);function i(n){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function u(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function l(n,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function s(n){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function p(n,e){return(p=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var f=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),l(this,s(e).apply(this,arguments))}var t,a,i;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&p(n,e)}(e,o["Component"]),t=e,(a=[{key:"render",value:function(){return r.a.createElement("div",{className:c.a.menu},r.a.createElement("div",{className:c.a.menuItem},r.a.createElement("a",{href:"/"},"Home")),r.a.createElement("div",{className:c.a.menuItem},r.a.createElement("a",{href:"/projects/"},"Projects")),r.a.createElement("div",{className:c.a.menuItem},r.a.createElement("a",{href:"/about/"},"About")))}}])&&u(t.prototype,a),i&&u(t,i),e}()},function(n,e,t){var o=t(10);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},function(n,e,t){n.exports=t.p+"ef7a02b69836dc8b6a732a54c4200dcb.png"},function(n,e,t){"use strict";var o=t(0),r=t.n(o),a=t(6),c=t.n(a),i=t(4),u=t.n(i);function l(n){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function s(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function p(n,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function f(n){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function A(n,e){return(A=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var m=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,f(e).apply(this,arguments))}var t,a,c;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&A(n,e)}(e,o["Component"]),t=e,(a=[{key:"render",value:function(){return r.a.createElement("div",{className:u.a.contactIcon},r.a.createElement("img",{className:u.a[this.props.name],src:this.props.srcImg}))}}])&&s(t.prototype,a),c&&s(t,c),e}(),b=t(7),d=t.n(b);function h(n){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function y(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function g(n,e){return!e||"object"!==h(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function _(n){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function E(n,e){return(E=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t.d(e,"a",function(){return v});var v=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),g(this,_(e).apply(this,arguments))}var t,a,i;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&E(n,e)}(e,o["Component"]),t=e,(a=[{key:"render",value:function(){return console.log(),r.a.createElement("div",{className:c.a.contactBar},r.a.createElement(m,{name:"github",srcImg:d.a}),r.a.createElement(m,{name:"linkedin"}),r.a.createElement(m,{name:"gmail"}),r.a.createElement(m,{name:"codingame"}),r.a.createElement(m,{name:"hackerrank"}))}}])&&y(t.prototype,a),i&&y(t,i),e}()},function(n,e,t){(e=n.exports=t(2)(!0)).push([n.i,".menu__menu___wk2Pg {\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.menu__menuItem___1EQ8C {\n  width: 200px;\n  background-color: #727272;\n  text-align: center;\n  cursor: pointer;\n}","",{version:3,sources:["menu.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB",file:"menu.css",sourcesContent:[".menu {\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.menuItem {\n  width: 200px;\n  background-color: #727272;\n  text-align: center;\n  cursor: pointer;\n}"]}]),e.locals={menu:"menu__menu___wk2Pg",menuItem:"menu__menuItem___1EQ8C"}},function(n,e,t){(e=n.exports=t(2)(!0)).push([n.i,".contactBar__contactBar___1F8gn {\n  height: 100vh;\n  width:100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}","",{version:3,sources:["contactBar.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB",file:"contactBar.css",sourcesContent:[".contactBar {\n  height: 100vh;\n  width:100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}"]}]),e.locals={contactBar:"contactBar__contactBar___1F8gn"}},function(n,e,t){e=n.exports=t(2)(!0);var o=t(19),r=o(t(12)),a=o(t(13)),c=o(t(14)),i=o(t(15));e.push([n.i,".contactIcon__contactIcon___1AXD7 {\n  width: 30px;\n  height:30px;\n  background-color: white;\n  margin-bottom: 15px; \n}\n\n.contactIcon__github___5wUoL{\n  width: 30px;\n  height:30px;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.contactIcon__linkedin___2ivaj{\n  width: 30px;\n  height:30px;\n  background-image: url("+r+");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.contactIcon__gmail___2RVS0{\n  width: 30px;\n  height:30px;\n  background-image: url("+a+");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.contactIcon__codingame___2S7U-{  \n  width: 30px;\n  height:30px;\n  background-image: url("+c+");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.contactIcon__hackerrank___3GALG{\n  width: 30px;\n  height:30px;\n  background-image: url("+i+");\n  background-repeat: no-repeat;\n  background-size: contain;\n}","",{version:3,sources:["contactIcon.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,WAAW;EACX,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,WAAW;EACX,+CAAgE;EAChE,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,WAAW;EACX,+CAA8D;EAC9D,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,WAAW;EACX,+CAAkE;EAClE,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,WAAW;EACX,+CAAwE;EACxE,4BAA4B;EAC5B,wBAAwB;AAC1B",file:"contactIcon.css",sourcesContent:['.contactIcon {\n  width: 30px;\n  height:30px;\n  background-color: white;\n  margin-bottom: 15px; \n}\n\n.github{\n  width: 30px;\n  height:30px;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.linkedin{\n  width: 30px;\n  height:30px;\n  background-image: url("../icons/contact/LinkedIn/LI-In-Bug.png");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.gmail{\n  width: 30px;\n  height:30px;\n  background-image: url("../icons/contact/Gmail/Gmail_Icon.png");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.codingame{  \n  width: 30px;\n  height:30px;\n  background-image: url("../icons/contact/CodinGame/codingame1.png");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.hackerrank{\n  width: 30px;\n  height:30px;\n  background-image: url("../icons/contact/HackerRank/HackerRank_logo.png");\n  background-repeat: no-repeat;\n  background-size: contain;\n}']}]),e.locals={contactIcon:"contactIcon__contactIcon___1AXD7",github:"contactIcon__github___5wUoL",linkedin:"contactIcon__linkedin___2ivaj",gmail:"contactIcon__gmail___2RVS0",codingame:"contactIcon__codingame___2S7U-",hackerrank:"contactIcon__hackerrank___3GALG"}},function(n,e,t){n.exports=t.p+"1b18d461ce75c75fdb4d7b6ec08b3e65.png"},function(n,e,t){n.exports=t.p+"598d07e7761f5bca3a3f78e95b6db422.png"},function(n,e,t){n.exports=t.p+"cc431ee45d97d3b9dabbbf11a4d8b612.png"},function(n,e,t){n.exports=t.p+"5d84930516cac6c802a95671c9acf511.png"},function(n,e,t){var o=t(21);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return f});var o=t(0),r=t.n(o),a=t(16),c=t.n(a);function i(n){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function u(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function l(n,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function s(n){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function p(n,e){return(p=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var f=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),l(this,s(e).apply(this,arguments))}var t,a,i;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&p(n,e)}(e,o["Component"]),t=e,(a=[{key:"render",value:function(){return r.a.createElement("div",{className:c.a.projectsMenu},r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement("a",{href:"https://agi-react-calculator.herokuapp.com/"},"Calculator")),r.a.createElement("li",null,r.a.createElement("a",{href:"http://khirshah.fractalometry.com/host-parasite-model/"},"Cellular automaton 1")),r.a.createElement("li",null,r.a.createElement("a",{href:"http://khirshah.fractalometry.com/competition-model/"},"Cellular automaton 2")),r.a.createElement("li",null,r.a.createElement("a",{href:"https://agi-weather-app.herokuapp.com/"},"Weather app")),r.a.createElement("li",null,r.a.createElement("a",{href:"https://agi-ebay-query.herokuapp.com/"},"Ebay search")),r.a.createElement("li",null,r.a.createElement("a",{href:"https://fract-acc-app-demo.herokuapp.com/"},"Accounting app"))))}}])&&u(t.prototype,a),i&&u(t,i),e}()},function(n,e,t){var o=t(29);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},,,function(n,e,t){(e=n.exports=t(2)(!0)).push([n.i,".projectsMenu__projectsMenu___17kH1{\n  display:flex;\n}","",{version:3,sources:["projectsMenu.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd",file:"projectsMenu.css",sourcesContent:[".projectsMenu{\n  display:flex;\n}"]}]),e.locals={projectsMenu:"projectsMenu__projectsMenu___17kH1"}},,,,,function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return b});var o=t(0),r=t.n(o),a=t(5),c=t(8),i=t(17),u=t(18),l=t.n(u);function s(n){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function f(n,e){return!e||"object"!==s(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function A(n){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function m(n,e){return(m=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var b=function(n){function e(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),f(this,A(e).apply(this,arguments))}var t,u,s;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&m(n,e)}(e,o["Component"]),t=e,(u=[{key:"render",value:function(){return r.a.createElement("div",{className:l.a.projects},r.a.createElement(a.a,null),r.a.createElement("div",{className:l.a.contentsContainer},r.a.createElement(c.a,null),r.a.createElement(i.default,null)))}}])&&p(t.prototype,u),s&&p(t,s),e}()},,,function(n,e,t){(e=n.exports=t(2)(!0)).push([n.i,".projects__projects___Nfm0C {\n  font-family: Georgia, serif;\n  background-image: linear-gradient(#3F3F3F, #262626);\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  color: #E5E5E5;\n  width: 100%;\n  min-height:100vh;\n}\n\n.projects__contentsContainer___Er4yV{\n  display:flex;\n  flex-direction: row;\n}","",{version:3,sources:["projects.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,mDAAmD;EACnD,4BAA4B;EAC5B,4BAA4B;EAC5B,cAAc;EACd,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,mBAAmB;AACrB",file:"projects.css",sourcesContent:[".projects {\n  font-family: Georgia, serif;\n  background-image: linear-gradient(#3F3F3F, #262626);\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  color: #E5E5E5;\n  width: 100%;\n  min-height:100vh;\n}\n\n.contentsContainer{\n  display:flex;\n  flex-direction: row;\n}"]}]),e.locals={projects:"projects__projects___Nfm0C",contentsContainer:"projects__contentsContainer___Er4yV"}},,,,,,,,,,,,,,function(n,e,t){"use strict";t.r(e);var o=t(0),r=t.n(o),a=t(20),c=t.n(a),i=t(26);t(44);c.a.render(r.a.createElement(i.default,null),document.getElementById("root"))},function(n,e,t){var o=t(45);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(3)(o,r);o.locals&&(n.exports=o.locals)},function(n,e,t){(n.exports=t(2)(!0)).push([n.i,"html {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\nbody, body > div {\n  min-height:100vh;\n  margin: 0;\n  padding: 0;\n}","",{version:3,sources:["index.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ",file:"index.css",sourcesContent:["html {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\nbody, body > div {\n  min-height:100vh;\n  margin: 0;\n  padding: 0;\n}"]}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,